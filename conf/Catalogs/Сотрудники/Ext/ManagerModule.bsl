
Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
   СтандартнаяОбработка = Ложь;
   
   Поля.Добавить( "Наименование");
   Поля.Добавить("ДатаРождения");

КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ФИОСотрудника = Данные["Наименование"];
	ДР = Данные["ДатаРождения"];      
	Если ДР = NULL Тогда
		Представление = ФИОСотрудника;
		Возврат; 
	ИначеЕсли ЗначениеЗаполнено(ДР)=Ложь  тогда
		Представление = ФИОСотрудника +" (д.р. не заполн.)";
		Возврат;
	КонецЕсли;
	Сегодня= НачалоДня(ТекущаяДата()); 
	ВозрастВСек = Сегодня - ДР;
	ВозрастВГодах = Цел( ВозрастВСек / (365.25*86400)  );
	
	Представление = СтрШаблон("%1 ( %2  лет)", ФИОСотрудника, ВозрастВГодах );
КонецПроцедуры

Функция ГенераторДатРождения(Генератор)   
	Сегодня = ТекущаяДата();
	ДнейЖизни = Генератор.СлучайноеЧисло(365*18,   36500);
	
	Возврат   Сегодня-ДнейЖизни*86400;
КонецФункции	
Процедура ЗаполнитьДРуСотрудников()  Экспорт 
	 Генератор = Новый ГенераторСлучайныхЧисел;
	 ВыборкаЭлементов = Справочники.Сотрудники.Выбрать();
	 Пока   ВыборкаЭлементов.Следующий()  Цикл
		 Сообщить( ВыборкаЭлементов.Наименование );
     
		 
		 Если ВыборкаЭлементов.ЭтоГруппа Тогда 
			 Продолжить;
		 КонецЕсли; 
		 Если ЗначениеЗаполнено(  ВыборкаЭлементов.ДатаРождения ) тогда
			 Продолжить;
		 КонецЕсли;
		 
		 ЭлементСправочника = ВыборкаЭлементов.ПолучитьОбъект();
		 ЭлементСправочника.ДатаРождения = ГенераторДатРождения(  Генератор );
		 ЭлементСправочника.Записать();
		 Сообщить(ЭлементСправочника.ДатаРождения );
	 КонецЦикла;	 
 КонецПроцедуры	                  
 
 
 
 
 
 
 
 
